@page "/funcionarios"
@using PIMFazendaUrbanaRadzen.Services
@using PIMFazendaUrbanaAPI.DTOs
@*@attribute [Authorize(Policy = "Gerente")]*@
@inject PIMFazendaUrbanaRadzen.Services.AuthService AuthService

<PageTitle>Funcionários</PageTitle>

@if (accessAllowed == true && hasChecked == true)
{
    <RadzenStack>
        <RadzenRow AlignItems="AlignItems.Center" Style="width: 100%; padding: 0; margin: 0;">
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenText Text="Funcionários" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="6">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">

                    <!-- Botão Exportar-->
                    <RadzenSplitButton ButtonStyle="ButtonStyle.Secondary"
                                       Icon="get_app"
                                       Text="Exportar"
                                       Variant="Radzen.Variant.Filled"
                                       Shade="Radzen.Shade.Lighter"
                                       IconColor="black"
                                       Click="OnExportarClick">
                        <RadzenSplitButtonItem Text="Excel" Value="xlsx" />
                        <RadzenSplitButtonItem Text="CSV" Value="csv" />
                    </RadzenSplitButton>

                    <!-- Botão Adicionar -->
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="add_circle_outline" Text="Adicionar" Click="@AddButtonClick" Variant="Radzen.Variant.Filled" Shade="Radzen.Shade.Light" />

                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>

        <RadzenTextBox Placeholder="Procurar..." style="display: block; width: 100%" @oninput="@(args => OnSearch(args.Value.ToString()))" />

        <RadzenRow Style="width: 100%; padding: 0; margin: 0;">
            <RadzenColumn SizeMD="12" Style="width: 100%; padding: 0; margin: 0;">
                <RadzenDataGrid @ref="grid0"
                                Data="@funcionarios"
                                TItem="FuncionarioDTO"
                                AllowFiltering="true"
                                FilterMode="FilterMode.Advanced"
                                AllowPaging="true"
                                AllowSorting="true"
                                ShowPagingSummary="true"
                                PageSizeOptions="@(new int[]{5, 10, 20, 30})"
                                AllowColumnResize="true"
                                PageSizeText="Itens por página"
                                PageTitleFormat="Página {0}"
                                PagingSummaryFormat="Página {0} de {1} ({2} itens)"
                                PrevPageAriaLabel="Ir para a página anterior"
                                PrevPageTitle="Página anterior"
                                EmptyText="Sem itens para mostrar"
                                PageAriaLabelFormat="Ir para a página {0}"
                                NextPageAriaLabel="Ir para a próxima página"
                                NextPageTitle="Próxima página"
                                LastPageTitle="Última página"
                                FirstPageTitle="Primeira página"
                                EndsWithText="Termina com..."
                                EnumFilterSelectText="Selecionar..."
                                EqualsText="Igual a..."
                                FilterText="Filtrar"
                                FirstPageAriaLabel="Ir para a primeira página"
                                GreaterThanText="Maior que..."
                                GreaterThanOrEqualsText="Igual ou maior que..."
                                IsNullText="Nulo"
                                IsNotNullText="Não nulo"
                                LastPageAriaLabel="Ir para a última página"
                                LessThanText="Menor que..."
                                LessThanOrEqualsText="Igual ou menor que..."
                                OrOperatorText="Ou"
                                AndOperatorText="E"
                                ApplyFilterText="Aplicar"
                                ClearFilterText="Limpar"
                                ColumnsText="Colunas"
                                ContainsText="Contém..."
                                DoesNotContainText="Não contém..."
                                StartsWithText="Começa com..."
                                IsNotEmptyText="Não é vazio"
                                IsEmptyText="É vazio"
                                NotEqualsText="Não é igual a..."
                                AllColumnsText="Todas"
                                ColumnsShowingText="Exibir colunas"
                                LogicalOperatorAriaLabel="Operador de filtro lógico"
                                EnumNullFilterText="Sem valor"
                                FilterToggleAriaLabel="Alternar"
                                FilterOperatorAriaLabel="Filtrar operador"
                                FilterValueAriaLabel="Filtrar valor"
                                SecondFilterOperatorAriaLabel="Segundo operador de filtro"
                                SecondFilterValueAriaLabel="Segundo valor de filtro"
                                GroupPanelText="Arrastar cabeçalho de coluna"
                                ExpandChildItemAriaLabel="Expandir item filho"
                                ExpandGroupAriaLabel="Expandir grupo"
                                RemoveGroupAriaLabel="Remover grupo"
                                SelectVisibleColumnsAriaLabel="Selecionar colunas visíveis"
                                class="data-grid-com-muitas-colunas">

                    <Columns>
                        <!-- Coluna para Id -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Id" Title="Id" Width="5%">
                        </RadzenDataGridColumn>

                        <!-- Coluna para Nome com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Nome" Title="Nome" Width="11%">
                            <Template Context="funcionario">
                                <span title="@funcionario.Nome">@funcionario.Nome</span> <!-- Tooltip com o nome completo -->
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna para Usuario com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Usuário" Title="Usuário" Width="8%">
                            <Template Context="funcionario">
                                <span title="@funcionario.Usuario">@funcionario.Usuario</span> <!-- Tooltip com o usuário completo -->
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna para Cargo com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Cargo" Title="Cargo" Width="8%" Filterable="false">
                            <Template Context="funcionario">
                                <span title="@funcionario.Cargo">@funcionario.Cargo</span> <!-- Tooltip com o Cargo completo -->
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna para Email com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Email" Title="Email" Width="14%">
                            <Template Context="funcionario">
                                <span title="@funcionario.Email">@funcionario.Email</span> <!-- Tooltip com o email completo -->
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna para CPF com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="CPF" Title="CPF" Width="9%" Sortable="false">
                            <Template Context="funcionario">
                                @if (funcionario.CPF != null)
                                {
                                    <span title="@FormatarCPF(funcionario.CPF)">
                                        @FormatarCPF(funcionario.CPF)
                                    </span> <!-- Tooltip com o CPF completo -->
                                }
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna customizada para Telefone -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Property="Telefone.Numero" Title="Telefone" Width="10%" Sortable="true">
                            <Template Context="funcionario">
                                @if (funcionario.Telefone != null)
                                {
                                    <span title="@FormatarTelefone(funcionario.Telefone.DDD, funcionario.Telefone.Numero)">
                                        @FormatarTelefone(funcionario.Telefone.DDD, funcionario.Telefone.Numero)
                                    </span> <!-- Tooltip com o telefone completo -->
                                }
                            </Template>
                        </RadzenDataGridColumn>

                        <RadzenDataGridColumn TItem="FuncionarioDTO" Title="Endereço" Width="37%">
                            <Template Context="funcionario">
                                @if (funcionario.Endereco != null)
                                {
                                    <span title="@($"{funcionario.Endereco.Logradouro}, {funcionario.Endereco.Numero}, {funcionario.Endereco.Bairro}, {funcionario.Endereco.Cidade} - {funcionario.Endereco.UF}")">
                                        @($"{funcionario.Endereco.Logradouro}, {funcionario.Endereco.Numero}, {funcionario.Endereco.Bairro}, {funcionario.Endereco.Cidade} - {funcionario.Endereco.UF}")
                                    </span>
                                }
                            </Template>
                            <FilterTemplate>
                                <RadzenCard>
                                    <RadzenRow>
                                        <RadzenTextBox @bind-Value="enderecoFiltro" Placeholder="Filtrar endereço..." Style="flex: 1;" />
                                    </RadzenRow>
                                    <RadzenRow>
                                        <RadzenStack Orientation="Orientation.Horizontal" Gap="1rem" JustifyContent="JustifyContent.Center" class="rz-mt-2" Style="width: 100%;">
                                            <!-- Botão Confirmar -->
                                            <RadzenButton Text="Aplicar" Click="@OnEnderecoFilterChanged"
                                                          ButtonStyle="ButtonStyle.Primary"
                                                          Style="width: 50%;" />
                                            <!-- Botão Cancelar -->
                                            <RadzenButton Text="Limpar" Click="@OnEnderecoFilterClear"
                                                          ButtonStyle="ButtonStyle.Light"
                                                          Style="width: 50%;" />
                                        </RadzenStack>
                                    </RadzenRow>
                                </RadzenCard>
                            </FilterTemplate>
                        </RadzenDataGridColumn>

                        <!-- Coluna para CEP com tooltip -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Title="CEP" Property="Endereco.CEP" Width="8%" Sortable="false">
                            <Template Context="funcionario">
                                @if (funcionario.Endereco.CEP != null)
                                {
                                    <span title="@FormatarCEP(funcionario.Endereco.CEP)">
                                        @FormatarCEP(funcionario.Endereco.CEP)
                                    </span> <!-- Tooltip com o CEP completo -->
                                }
                            </Template>
                        </RadzenDataGridColumn>

                        <!-- Coluna customizada para botões de ação -->
                        <RadzenDataGridColumn TItem="FuncionarioDTO" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="5%" MinWidth="110px">
                            <Template Context="funcionario">
                                <RadzenButton ButtonStyle="ButtonStyle.Primary"
                                              Icon="edit"
                                              Size="ButtonSize.Medium"
                                              Shade="Shade.Lighter"
                                              Variant="Variant.Flat"
                                              Click="@(() => EditarFuncionario(funcionario))"
                                              @onclick:stopPropagation="true"
                                              Style="color: #ffffff; background-color: rgba(66, 154, 255, 0.68)" />
                                <RadzenButton ButtonStyle="ButtonStyle.Danger"
                                              Icon="delete"
                                              Size="ButtonSize.Medium"
                                              Shade="Shade.Lighter"
                                              Variant="Variant.Flat"
                                              Click="@(() => ConfirmarExclusao(funcionario))"
                                              @onclick:stopPropagation="true" />
                            </Template>
                        </RadzenDataGridColumn>

                    </Columns>
                </RadzenDataGrid>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div style="color:red;">@errorMessage</div> <!-- Exibe erro em vermelho -->
    }
}
else if (accessAllowed == false && isLoggedIn == true && hasChecked == true)
{
    NavigationManager.NavigateTo("/acesso-negado");
}

@code {

    private bool accessAllowed = false;
    private bool isLoggedIn = false;
    private bool hasChecked = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender == true)
        {
            isLoggedIn = await AuthService.IsAuthenticated();

            if (isLoggedIn)
            {
                var isGerente = await AuthService.IsGerente();

                if (isGerente == true)
                {
                    accessAllowed = true;
                }
            }
            hasChecked = true;
            StateHasChanged();
        }
    }
}